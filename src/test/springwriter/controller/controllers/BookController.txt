package test.springwriter.controller.controllers;

import java.util.Optional;
import java.util.List;
import test.springwriter.controller.models.Book;
import test.springwriter.controller.repositories.BookRepository;
import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.http.ResponseEntity;
import org.springframework.http.HttpStatus;

import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.PathVariable;

@RestController
class BookController {

	@Autowired
	private BookRepository repository;

	@GetMapping("/book")
	ResponseEntity<List<Book>> getAllBooks() {
		return ResponseEntity.ok(repository.findAll());
	}

	@GetMapping("/book/{id}")
	ResponseEntity<Book> getOneBook(@PathVariable Integer id) {
		Optional<Book> book = repository.findById(id);
		if(!book.isPresent()){
			return new ResponseEntity<Book>(HttpStatus.NOT_FOUND);
		}

		return ResponseEntity.ok(book.get());
	}

	@PostMapping("/book")
	ResponseEntity<Book> postBook(@RequestBody Book newBook) {
		newBook.setId(repository.maxId() + 1);
		return ResponseEntity.ok(repository.save(newBook));
	}

	@PutMapping("/book/{id}")
	ResponseEntity<Book> putBook(@RequestBody Book newBook, @PathVariable Integer id) {
		if(!repository.findById(id).isPresent()){
			return new ResponseEntity<Book>(HttpStatus.NOT_FOUND);
		}

		newBook.setId(id);
		return ResponseEntity.ok(repository.save(newBook));
	}

	@DeleteMapping("/book/{id}")
	ResponseEntity<Book> deleteBook(@PathVariable Integer id) {
		Optional<Book> book = repository.findById(id);
		if(!book.isPresent()){
			return new ResponseEntity<Book>(HttpStatus.NOT_FOUND);
		}

		repository.delete(book.get());
		return new ResponseEntity<Book>(HttpStatus.OK);
	}

}
